{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@rob006/flarum-ext-last-post-avatar/webpack/bootstrap","webpack://@rob006/flarum-ext-last-post-avatar/webpack/runtime/compat get default export","webpack://@rob006/flarum-ext-last-post-avatar/webpack/runtime/define property getters","webpack://@rob006/flarum-ext-last-post-avatar/webpack/runtime/hasOwnProperty shorthand","webpack://@rob006/flarum-ext-last-post-avatar/webpack/runtime/make namespace object","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/app']\"","webpack://@rob006/flarum-ext-last-post-avatar/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@rob006/flarum-ext-last-post-avatar/./src/common/index.ts","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['forum/app']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/extend']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['forum/components/TerminalPost']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/components/Link']\"","webpack://@rob006/flarum-ext-last-post-avatar/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@rob006/flarum-ext-last-post-avatar/./src/forum/index.tsx","webpack://@rob006/flarum-ext-last-post-avatar/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","/*\n * This file is part of rob006/flarum-ext-last-post-avatar.\n *\n * Copyright (c) 2023 Robert Korulczyk <robert@korulczyk.pl>\n *\n * This source file is subject to the MIT license that is bundled\n * with this source code in the file LICENSE.\n */\n\nimport app from 'flarum/common/app';\n\napp.initializers.add('rob006/flarum-ext-last-post-avatar', () => {\n    // console.log('[rob006/flarum-ext-last-post-avatar] Hello, forum and admin!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/TerminalPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","/*\n * This file is part of rob006/flarum-ext-last-post-avatar.\n *\n * Copyright (c) 2023 Robert Korulczyk <robert@korulczyk.pl>\n *\n * This source file is subject to the MIT license that is bundled\n * with this source code in the file LICENSE.\n */\n\nimport app from 'flarum/forum/app';\nimport {extend, override} from 'flarum/common/extend';\nimport TerminalPost from 'flarum/forum/components/TerminalPost';\nimport avatar from 'flarum/common/helpers/avatar';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport icon from 'flarum/common/helpers/icon';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Link from 'flarum/common/components/Link';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nclass MyTerminalPost extends TerminalPost {\n\n    view(vnode) {\n        const mode = app.forum.attribute('lastPostAvatarMode');\n        const discussion = this.attrs.discussion;\n\n\t\tconst isPrivateDiscussion = 'isPrivateDiscussion' in discussion\n\t\t\t&& discussion.isPrivateDiscussion()\n\t\t\t&& app.forum.attribute('lastPostAvatarByobu')\n\n\t\tif (isPrivateDiscussion) {\n\t\t\tsuper.view(vnode)\n\t\t\treturn\n\t\t}\n\n        const lastPost = this.attrs.lastPost && discussion.replyCount();\n\n        const user = discussion[lastPost ? 'lastPostedUser' : 'user']();\n        const time = discussion[lastPost ? 'lastPostedAt' : 'createdAt']();\n        var showAvatar = (mode === 'all-replies' && lastPost)\n            || (mode === 'always')\n            || (mode === 'non-op-replies' && discussion.lastPostedUser() != discussion.user())\n\n        return (\n            <span>\n                {lastPost ? icon('fas fa-reply') : ''}{' '}\n                {showAvatar ? avatar(user, {className: 'ComposerBody-lastPostAvatar'}) : ''}\n                {app.translator.trans('core.forum.discussion_list.' + (lastPost ? 'replied' : 'started') + '_text', {\n                    user,\n                    ago: humanTime(time),\n                })}\n            </span>\n        );\n    }\n}\n\napp.initializers.add('rob006/flarum-ext-last-post-avatar', () => {\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        if (app.forum.attribute('lastPostAvatarMode') === 'replace-main') {\n            return;\n        }\n        items.replace(\n            'terminalPost',\n            MyTerminalPost.component({\n                discussion: this.attrs.discussion,\n                lastPost: !this.showFirstPost(),\n            })\n        );\n    });\n\n    override(DiscussionListItem.prototype, 'view', function (vnode) {\n        var content = vnode();\n        const discussion = this.attrs.discussion;\n\n        if (\n            app.forum.attribute('lastPostAvatarMode') !== 'replace-main'\n            || this.showFirstPost() || !discussion.replyCount()\n        ) {\n            return content;\n        }\n\n        const user = discussion.lastPostedUser();\n\n        const replaceAvatar = function (node) {\n            if (node && node.children && Array.isArray(node.children)) {\n                const container = node.children.find(function (node) {\n                    return node && node.attrs && node.attrs.className && String(node.attrs.className).split(' ').includes('DiscussionListItem-content');\n                });\n\n                if (container) {\n                    container.children.splice(0, 1,\n                        <Tooltip\n                            text={app.translator.trans('core.forum.discussion_list.replied_text', {\n                                user,\n                                ago: humanTime(discussion.createdAt())\n                            })}\n                            position=\"right\"\n                        >\n                            <Link className=\"DiscussionListItem-author\" href={user ? app.route.user(user) : '#'}>\n                                {avatar(user || null, {title: ''})}\n                            </Link>\n                        </Tooltip>\n                    );\n                    return;\n                }\n\n                node.children.forEach(function (child) {\n                    replaceAvatar(child);\n                });\n            }\n        };\n\n        replaceAvatar(content);\n\n        return content;\n    });\n});\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","app","MyTerminalPost","subClass","superClass","create","constructor","view","vnode","mode","discussion","this","attrs","isPrivateDiscussion","lastPost","replyCount","user","time","showAvatar","lastPostedUser","icon","avatar","className","ago","humanTime","TerminalPost","extend","DiscussionListItem","items","replace","component","showFirstPost","override","content","replaceAvatar","node","children","Array","isArray","container","find","String","split","includes","splice","text","createdAt","position","href","title","forEach","child"],"sourceRoot":""}